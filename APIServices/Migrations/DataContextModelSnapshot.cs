// <auto-generated />
using System;
using APIServices.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIServices.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("APIServices.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("APIServices.Entities.Contacts.ContactDetails", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactAddress1")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactAddress2")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactCity")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactLandMark")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPinCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPrifix")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactState")
                        .HasColumnType("TEXT");

                    b.Property<int>("ContactType")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContactId");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("APIServices.Entities.Purchase.PurchaseRequest", b =>
                {
                    b.Property<int>("PurchaseRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("GrossWeight")
                        .HasColumnType("REAL");

                    b.Property<int?>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Labour")
                        .HasColumnType("REAL");

                    b.Property<double>("LessWeight")
                        .HasColumnType("REAL");

                    b.Property<string>("ManufactureId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ManufactureName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MatelType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("NetWeight")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Rate")
                        .HasColumnType("REAL");

                    b.Property<double>("Wastage")
                        .HasColumnType("REAL");

                    b.HasKey("PurchaseRequestId");

                    b.ToTable("PurchaseRequests");
                });

            modelBuilder.Entity("APIServices.Entities.Stock.Gold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Carrot")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<double>("GrossWeight")
                        .HasColumnType("REAL");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<double>("LessWeight")
                        .HasColumnType("REAL");

                    b.Property<double>("NetWeight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("GoldStock");
                });
#pragma warning restore 612, 618
        }
    }
}
